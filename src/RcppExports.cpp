// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// predY_LR_c
double predY_LR_c(const arma::mat& Xtrain, const arma::mat& Ytrain, const arma::mat& Xtest);
RcppExport SEXP _jackknifeplus_predY_LR_c(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtest(XtestSEXP);
    rcpp_result_gen = Rcpp::wrap(predY_LR_c(Xtrain, Ytrain, Xtest));
    return rcpp_result_gen;
END_RCPP
}
// jackknifeplus_c
Rcpp::List jackknifeplus_c(const arma::mat& Xtrain, const arma::mat& Ytrain, const arma::mat& Xtest);
RcppExport SEXP _jackknifeplus_jackknifeplus_c(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtest(XtestSEXP);
    rcpp_result_gen = Rcpp::wrap(jackknifeplus_c(Xtrain, Ytrain, Xtest));
    return rcpp_result_gen;
END_RCPP
}
// jackknife_c
Rcpp::List jackknife_c(const arma::mat& Xtrain, const arma::mat& Ytrain, const arma::mat& Xtest);
RcppExport SEXP _jackknifeplus_jackknife_c(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtest(XtestSEXP);
    rcpp_result_gen = Rcpp::wrap(jackknife_c(Xtrain, Ytrain, Xtest));
    return rcpp_result_gen;
END_RCPP
}
// jackknifeplusMM_c
Rcpp::List jackknifeplusMM_c(const arma::mat& Xtrain, const arma::mat& Ytrain, const arma::mat& Xtest);
RcppExport SEXP _jackknifeplus_jackknifeplusMM_c(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtest(XtestSEXP);
    rcpp_result_gen = Rcpp::wrap(jackknifeplusMM_c(Xtrain, Ytrain, Xtest));
    return rcpp_result_gen;
END_RCPP
}
// jackknifeplusCV_c
Rcpp::List jackknifeplusCV_c(const arma::mat& Xtrain, const arma::mat& Ytrain, const arma::mat& Xtest, int K);
RcppExport SEXP _jackknifeplus_jackknifeplusCV_c(SEXP XtrainSEXP, SEXP YtrainSEXP, SEXP XtestSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ytrain(YtrainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(jackknifeplusCV_c(Xtrain, Ytrain, Xtest, K));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_jackknifeplus_predY_LR_c", (DL_FUNC) &_jackknifeplus_predY_LR_c, 3},
    {"_jackknifeplus_jackknifeplus_c", (DL_FUNC) &_jackknifeplus_jackknifeplus_c, 3},
    {"_jackknifeplus_jackknife_c", (DL_FUNC) &_jackknifeplus_jackknife_c, 3},
    {"_jackknifeplus_jackknifeplusMM_c", (DL_FUNC) &_jackknifeplus_jackknifeplusMM_c, 3},
    {"_jackknifeplus_jackknifeplusCV_c", (DL_FUNC) &_jackknifeplus_jackknifeplusCV_c, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_jackknifeplus(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
